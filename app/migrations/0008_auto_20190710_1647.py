# Generated by Django 2.1 on 2019-07-10 08:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0007_remove_store_money_format'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revenue', models.FloatField(default=0, verbose_name='Revenue')),
                ('orders', models.IntegerField(default=0, verbose_name='Orders')),
                ('repeat_purchase_rate', models.FloatField(default=0, verbose_name='Repeat Purchase Rate')),
                ('conversion_rate', models.FloatField(default=0, verbose_name='Conversion Rate')),
                ('sent', models.IntegerField(default=0, verbose_name='Sent')),
                ('open_rate', models.FloatField(default=0, verbose_name='Open Rate')),
                ('click_rate', models.FloatField(default=0, verbose_name='Click Rate')),
                ('unsubscribe_rate', models.FloatField(default=0, verbose_name='Unsubscribe Rate')),
                ('total_revenue', models.FloatField(default=0, verbose_name='Revenue')),
                ('total_orders', models.IntegerField(default=0, verbose_name='Orders')),
                ('total_repeat_purchase_rate', models.FloatField(default=0, verbose_name='Repeat Purchase Rate')),
                ('total_conversion_rate', models.FloatField(default=0, verbose_name='Conversion Rate')),
                ('total_sent', models.IntegerField(default=0, verbose_name='Sent')),
                ('total_open_rate', models.FloatField(default=0, verbose_name='Open Rate')),
                ('total_click_rate', models.FloatField(default=0, verbose_name='Click Rate')),
                ('total_unsubscribe_rate', models.FloatField(default=0, verbose_name='Unsubscribe Rate')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.Store')),
            ],
            options={
                'db_table': 'dashboard',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.TextField(blank=True, verbose_name='邮件标题')),
                ('heading_text', models.TextField(blank=True, verbose_name='邮件')),
                ('logo', models.TextField(blank=True, verbose_name='邮件logo')),
                ('banner', models.TextField(blank=True, verbose_name='邮件banner')),
                ('headline', models.TextField(blank=True, verbose_name='邮件headline')),
                ('body_text', models.TextField(blank=True, verbose_name='邮件body_text')),
                ('product_list', models.TextField(blank=True, verbose_name='产品列表')),
                ('customer_group_list', models.TextField(blank=True, verbose_name='邮件对应的客户组列表')),
                ('send_rule', models.TextField(blank=True, verbose_name='发送邮件规则')),
                ('state', models.SmallIntegerField(choices=[(0, '定时邮件'), (1, '触发邮件')], db_index=True, default=0, verbose_name='邮件模板类型')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.Store')),
            ],
            options={
                'db_table': 'email_template',
            },
        ),
        migrations.CreateModel(
            name='EmailTrigger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='标题')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('open_rate', models.FloatField(default=0, verbose_name='打开邮件比例')),
                ('click_rate', models.FloatField(default=0, verbose_name='单击比例')),
                ('members', models.IntegerField(default=0, verbose_name='数量')),
                ('trigger_info', models.TextField(blank=True, verbose_name='trigger关系')),
                ('email_delay', models.TextField(blank=True, verbose_name='发送邮件顺序')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.Store')),
            ],
            options={
                'db_table': 'email_trigger',
            },
        ),
        migrations.RenameModel(
            old_name='Customers',
            new_name='Customer',
        ),
        migrations.RemoveField(
            model_name='deshboard',
            name='store',
        ),
        migrations.RemoveField(
            model_name='emailgroup',
            name='store',
        ),
        migrations.RemoveField(
            model_name='emailinfo',
            name='store',
        ),
        migrations.AlterModelTable(
            name='customer',
            table='customer',
        ),
        migrations.DeleteModel(
            name='Deshboard',
        ),
        migrations.DeleteModel(
            name='EmailGroup',
        ),
        migrations.DeleteModel(
            name='EmailInfo',
        ),
    ]
