# Generated by Django 2.1 on 2019-07-11 15:18

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='账户')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='账户邮箱')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='密码')),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='用户唯一标识')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='客户名称')),
                ('customer_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='客户邮箱')),
                ('subscribe_time', models.DateTimeField(blank=True, null=True, verbose_name='最近购物时间')),
                ('sign_up_time', models.DateTimeField(blank=True, null=True, verbose_name='客户登陆时间')),
                ('last_cart_time', models.DateTimeField(blank=True, null=True, verbose_name='客户最后一次购物时间')),
                ('last_order_time', models.DateTimeField(blank=True, null=True, verbose_name='客户最后一次订单时间')),
                ('last_order_status', models.SmallIntegerField(blank=True, choices=[(0, 'is paid'), (1, 'is unpaid')], db_index=True, null=True, verbose_name='客户最后一次订单状态')),
                ('last_cart_status', models.SmallIntegerField(blank=True, choices=[(0, 'is empty'), (1, 'is not empty')], db_index=True, null=True, verbose_name='客户最后一次购物车状态')),
                ('accept_marketing_status', models.SmallIntegerField(blank=True, choices=[(0, 'is true'), (1, 'is false')], db_index=True, null=True, verbose_name='')),
                ('payment_amount', models.CharField(blank=True, max_length=255, verbose_name='客户付款金额')),
                ('store_id', models.IntegerField(verbose_name='店铺id')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='用户列表ID')),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='标题')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('sents', models.IntegerField(default=0, verbose_name='发送量')),
                ('opens', models.IntegerField(default=0, verbose_name='打开量')),
                ('clicks', models.IntegerField(default=0, verbose_name='点击量')),
                ('open_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='邮件打开率')),
                ('click_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='邮件单击率')),
                ('members', models.CharField(blank=True, max_length=255, null=True, verbose_name='数量')),
                ('relation_info', models.TextField(blank=True, verbose_name='客户关系')),
                ('customer_list', models.TextField(blank=True, verbose_name='对应客户列表')),
                ('store_id', models.IntegerField(verbose_name='店铺id')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'customer_group',
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revenue', models.FloatField(default=0, verbose_name='Revenue')),
                ('orders', models.IntegerField(default=0, verbose_name='Orders')),
                ('repeat_purchase_rate', models.FloatField(default=0, verbose_name='Repeat Purchase Rate')),
                ('conversion_rate', models.FloatField(default=0, verbose_name='Conversion Rate')),
                ('sent', models.IntegerField(default=0, verbose_name='Sent')),
                ('open_rate', models.FloatField(default=0, verbose_name='Open Rate')),
                ('click_rate', models.FloatField(default=0, verbose_name='Click Rate')),
                ('unsubscribe_rate', models.FloatField(default=0, verbose_name='Unsubscribe Rate')),
                ('total_revenue', models.FloatField(default=0, verbose_name='Revenue')),
                ('total_orders', models.IntegerField(default=0, verbose_name='Orders')),
                ('total_repeat_purchase_rate', models.FloatField(default=0, verbose_name='Repeat Purchase Rate')),
                ('total_conversion_rate', models.FloatField(default=0, verbose_name='Conversion Rate')),
                ('total_sent', models.IntegerField(default=0, verbose_name='Sent')),
                ('total_open_rate', models.FloatField(default=0, verbose_name='Open Rate')),
                ('total_click_rate', models.FloatField(default=0, verbose_name='Click Rate')),
                ('total_unsubscribe_rate', models.FloatField(default=0, verbose_name='Unsubscribe Rate')),
                ('store_id', models.IntegerField(verbose_name='店铺id')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'dashboard',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='邮件ID')),
                ('subject', models.TextField(blank=True, verbose_name='邮件标题')),
                ('heading_text', models.TextField(blank=True, verbose_name='邮件')),
                ('logo', models.TextField(blank=True, verbose_name='邮件logo')),
                ('banner', models.TextField(blank=True, verbose_name='邮件banner')),
                ('headline', models.TextField(blank=True, verbose_name='邮件headline')),
                ('body_text', models.TextField(blank=True, verbose_name='邮件body_text')),
                ('product_list', models.TextField(blank=True, verbose_name='产品列表')),
                ('customer_group_list', models.TextField(blank=True, verbose_name='邮件对应的客户组列表')),
                ('send_rule', models.TextField(blank=True, verbose_name='发送邮件规则')),
                ('state', models.SmallIntegerField(choices=[(0, '定时邮件'), (1, '触发邮件')], db_index=True, default=0, verbose_name='邮件模板类型')),
                ('sents', models.IntegerField(default=0, verbose_name='发送量')),
                ('opens', models.IntegerField(default=0, verbose_name='打开量')),
                ('clicks', models.IntegerField(default=0, verbose_name='点击量')),
                ('unsubscribes', models.IntegerField(default=0, verbose_name='退订量')),
                ('open_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='邮件打开率')),
                ('click_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='邮件单击率')),
                ('unsubscribe_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='邮件退订率')),
                ('store_id', models.IntegerField(verbose_name='店铺id')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'email_template',
            },
        ),
        migrations.CreateModel(
            name='EmailTrigger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='标题')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('open_rate', models.FloatField(default=0, verbose_name='打开邮件比例')),
                ('click_rate', models.FloatField(default=0, verbose_name='单击比例')),
                ('members', models.IntegerField(default=0, verbose_name='数量')),
                ('trigger_info', models.TextField(blank=True, verbose_name='trigger关系')),
                ('email_delay', models.TextField(blank=True, verbose_name='发送邮件顺序')),
                ('store_id', models.IntegerField(verbose_name='店铺id')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'email_trigger',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(db_index=True, max_length=255, verbose_name='产品标识符')),
                ('url', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品URL')),
                ('uuid', models.CharField(max_length=64, verbose_name='产品唯一标识')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='产品名称')),
                ('image_url', models.CharField(max_length=255, verbose_name='图片URL')),
                ('thumbnail', models.TextField(blank=True, default=None, null=True, verbose_name='缩略图')),
                ('price', models.CharField(max_length=255, verbose_name='产品价格')),
                ('tag', models.CharField(max_length=255, verbose_name='所属标签')),
                ('store_id', models.IntegerField(verbose_name='店铺id')),
                ('publish_time', models.DateTimeField(blank=True, null=True, verbose_name='发布时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('url_with_utm', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='产品的带utm构建的url')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品类目标题')),
                ('url', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品类目标题url')),
                ('category_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='产品类目id')),
                ('store_id', models.IntegerField(verbose_name='店铺id')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'product_category',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='店铺名称')),
                ('url', models.CharField(blank=True, max_length=255, unique=True, verbose_name='店铺URL')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='店铺domain')),
                ('email', models.EmailField(blank=True, max_length=255, verbose_name='email address')),
                ('token', models.CharField(blank=True, max_length=255, null=True, verbose_name='账号使用标识')),
                ('hmac', models.CharField(blank=True, max_length=255, null=True, verbose_name='hmac')),
                ('timezone', models.CharField(blank=True, max_length=255, null=True, verbose_name='店铺的时区')),
                ('sender', models.CharField(blank=True, max_length=255, null=True, verbose_name='sender')),
                ('customer_shop', models.CharField(blank=True, max_length=255, null=True, verbose_name='customer_shop')),
                ('sender_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='customer_email')),
                ('store_view_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='店铺的GA中的view id')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'store',
            },
        ),
        migrations.CreateModel(
            name='SubscriberActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opt_time', models.DateTimeField(blank=True, null=True, verbose_name='客户登陆时间')),
                ('email', models.CharField(db_index=True, max_length=255, verbose_name='客户邮件地址')),
                ('message_uuid', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='关联的邮件ID')),
                ('type', models.SmallIntegerField(default=0, verbose_name='客户操作类型')),
                ('store_id', models.IntegerField(verbose_name='店铺id')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'subscriber_activity',
            },
        ),
        migrations.AlterUniqueTogether(
            name='subscriberactivity',
            unique_together={('opt_time', 'email', 'type')},
        ),
        migrations.AlterUniqueTogether(
            name='productcategory',
            unique_together={('category_id', 'store_id')},
        ),
        migrations.AddField(
            model_name='product',
            name='product_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.ProductCategory'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('product_category', 'uuid')},
        ),
    ]
